communication:
    sensor("sensor", "perceptionExperiment.SmartphoneSensor"). //informacoes relativas ao celular serao simuladas dentro do Sigon
    sensor("sensorCommunication", "perceptionExperiment.CommunicationSensor"). //informacoes recebidas do SUMO (posicao do carro, velocidade e etc)
    actuator("notifyActuator", "perceptionExperiment.NotifyActuator").


beliefs:	
	//car(c). TODO: verificar o motivo de nao adicionar essa crenca ao receber o car(chevete)
	vehicle :- car(X, Y).
	//car(chevete).	
	//adiciona-se crencas vindas do cc
	
desires:
    notifyPedestrian.
    
intentions:
	notifyPedestrian.
    
_bayesian:
	aware(10).
//contexto vai usar o bc para definir se ta aware ou nao

//! beliefs aware(X) :- _bayesian aware(X) && _bayesian X > Y && .

//! beliefs vehicle :- beliefs car(c).
	
	

planner:
    plan(notifyPedestrian,[action(notifyActuator(d0))],[aware],_). //pegue preC de RBC
    //plan(notifyPedestrian,[action(notifyActuator(d0))],[car(X,_), not aware],_). //a ideia Ã© que esse pegue coisas do BC
